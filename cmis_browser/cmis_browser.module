<?php
// $Id$

/**
 * Implementation of hook_menu().
 * 
 */
function cmis_browser_menu() {
  $items = array();
  $items['cmis/browser'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('CMIS Repository'),
    'page callback' => 'cmis_browser_browse', 
    'access callback' => 'user_access', 
    'access arguments' => array('access cmis'),
  );
  return $items;
}

/**
 * Register custom themes for cmis_browser module.
 * 
 */
function cmis_browser_theme() {
  return array(
    'cmis_browser_browse_form' => array(
      'arguments' => array('form' => NULL),
      'file' => 'cmis_browser.theme.inc'
    ),
    'cmis_browser_browse_children' => array(
      'arguments' => array('context' => NULL),
      'file' => 'cmis_browser.theme.inc'
    ),
    'cmis_browser_browse_breadcrumb' => array(
      'arguments' => array('bcarray' => NULL),
      'file' => 'cmis_browser.theme.inc'
    )
  );
}

/**
 * Build cmis_browser browse page.
 * 
 */
function cmis_browser_browse() {
  module_load_include('api.inc', 'cmis');

  // Invoke CMIS service
  try {
    $repository = cmisapi_getRepositoryInfo();
  }
  catch (CMISException $e) {
    cmis_error_handler('cmis_browser', $e);
    return '';
  }
  
  // Folder lookup 
  $folder_id = NULL;
  $folder_parents = array();
  $bcarray = array_slice(explode('/', $_GET['q']), 2);
  
  if (isset($_GET['id'])) {
    $folder_id = urldecode($_GET['id']);
    try {
      $folder_parents = cmisapi_getObjectParents($repository->repositoryId, $folder_id);
    }
    catch (CMISException $e) {
      cmis_error_handler('cmis_browser', $e);
      return '';
    }
  }
  else {
    if (!empty($bcarray)) {
      $path = '/'. implode('/', $bcarray);
      $folder_id = drupal_urlencode($path);
    }
    else {
      $folder_id = variable_get('cmis_browser_folder', NULL);
      if (is_null($folder_id)) {
        // Unable to lookup requested folder. displaying repository root folder
        $folder_title = end(explode('/', $repository->rootFolderId));
        $bcarray = array($folder_title);
        $folder_id = '/'. $folder_title;
      }
    }
  }
  
  // Children lookup 
  try {
    $children = cmisapi_getChildren($repository->repositoryId, $folder_id);
  }
  catch (CMISException $e) {
    cmis_error_handler('cmis_browser', $e);
    return '';
  }

  // Render output
  drupal_add_css(drupal_get_path('module', 'cmis_browser') .'/cmis_browser.css');
  $contents = drupal_get_form('cmis_browser_browse_form');
  $contents .= theme('cmis_browser_browse_breadcrumb', $bcarray);
  $contents .= theme('cmis_browser_browse_children', array(
    'children' => $children, 'bcarray' => $bcarray, 'id'=>$_GET['id'], 'folder_parents' => $folder_parents
  ));
  
  return $contents;
}

/**
 * Implementation of hook_form().
 */
function cmis_browser_browse_form($form_state) {
  $parts = explode('/', $_GET['q']);
  $path = implode('/', array_slice($parts, 2));

  $form['#theme'] = 'cmis_browser_browse_form';

  $form['browse']['path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path'), 
    '#default_value' => '/'.  $path, 
    '#autocomplete_path' => 'cmis/autocomplete', 
    '#size' => 50);

  $form['browse']['submit'] = array(
    '#type' => 'submit',
    '#name' => 'browse',
    '#default_value' => 'Browse',
  );

  return $form;
}

/**
 * Implementation of hook_form_submit().
 * 
 */
function cmis_browser_browse_form_submit($form, & $form_state) {
  $path = $form_state['values']['path'];
  $submit2 = $form_state['values']['browse'];
  unset($form_state['storage']);
  if ('Browse' == $submit2) {
    $form_state['redirect'] = 'cmis/browser'. $path;
  }
}